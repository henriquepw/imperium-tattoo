package employee

import (
	"fmt"
	"github.com/henriquepw/imperium-tattoo/web/types"
	"github.com/henriquepw/imperium-tattoo/web/view/layout"
	"github.com/henriquepw/imperium-tattoo/web/view/ui"
)

templ badge(role string, classname ...string) {
	<span class={ "text-sm text-accent-12 bg-accent-3 border border-accent-6 px-1 py-0.5 rounded" , classname }>
		{ role }
	</span>
}

func getEmployeeStr(e types.Employee) string {
	return fmt.Sprintf(
		"employee={id:\"%s\",name:\"%s\",role:\"%s\",email:\"%s\"}",
		e.ID, e.Name, e.Role, e.Email,
	)
}

templ EmployeeRow(i types.Employee) {
	<tr id={ "employee-" + i.ID } class="group [&.htmx-request]:hidden">
		<td class="max-w-10 hidden md:table-cell">
			@badge(i.Role)
		</td>
		<td>
			<div class="flex flex-col">
				<div class="space-x-2">
					@badge(i.Role, "md:hidden")
					<span>{ i.Name }</span>
				</div>
				<span class="text-gray-11 md:hidden">{ i.Email }</span>
			</div>
		</td>
		<td class="hidden md:block">{ i.Email }</td>
		<td>
			<div class="flex gap-4 justify-end">
				<button type="button" @click={ getEmployeeStr(i) }>
					@ui.Icon("edit", "h-4 text-gray-11")
				</button>
				<button
					hx-delete={ "employees/" + i.ID }
					hx-swap="outerHTML"
					hx-target={ "#employee-" + i.ID }
					hx-indicator={ "#employee-" + i.ID }
				>
					@ui.Indicator("trash", "h-4 text-error-8")
				</button>
			</div>
		</td>
	</tr>
}

templ EmployeesPage(boosted bool, items []types.Employee) {
	@layout.Dashbaord("Funcionários", boosted) {
		<div x-data="{createOpen: false, employee: null}">
			@layout.PageHeader("Funcionários", []ui.BreadcrumbItem{
				{Label: "Funcionários", Href: "/employees"},
			}) {
				<button class="btn-primary" type="button" @click="createOpen=true">
					@ui.Icon("plus")
				</button>
			}
			@layout.WithPageLoad() {
				<section class="w-full card p-0 overflow-hidden">
					<table class="table-auto w-full">
						<thead class="bg-gray-2">
							<tr class="uppercase">
								<td class="md:hidden">Funcionário</td>
								<td class="hidden md:table-cell">Cargo</td>
								<td class="hidden md:table-cell">Nome</td>
								<td class="hidden md:table-cell">Email</td>
								<td></td>
							</tr>
						</thead>
						<tbody id="employees">
							for _, i := range items {
								@EmployeeRow(i)
							}
							if len(items) == 0 {
								<tr>
									<td colspan="4" class="bg-warning-2">
										<div class="text-center text-warning-12">
											Nenhum Funcionário cadastrado
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</section>
			}
			@ui.Modal("createOpen", "createOpen=false", "Novo Funcionário") {
				@EmployeeCreateForm(EmployeeCreateFormProps{})
			}
			@ui.Modal("!!employee", "employee=null", "Editar Funcionário") {
				@EmployeeEditForm(nil)
			}
		</div>
	}
}
